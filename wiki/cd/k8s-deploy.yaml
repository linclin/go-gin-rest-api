apiVersion: apps/v1 
kind: Deployment
metadata: 
  name: go-gin-rest-api
  namespace: default
  labels:
    name: go-gin-rest-api
spec:  
  replicas: 1
  selector:
    matchLabels:
      name: go-gin-rest-api
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate    
  template: 
    metadata: 
      labels: 
        name: go-gin-rest-api
    spec:  
      restartPolicy: Always   
      containers: 
        - name: go-gin-rest-api 
          image: "registry.cn-shenzhen.aliyuncs.com/dev-ops/go-gin-rest-api:1.0.1"
          imagePullPolicy: Always
          securityContext:
            privileged: true   
          ports:
            - containerPort: 8080
              name: http-port 
          env: 
            - name: RunMode
              value: 'se'         
          resources:
            limits:
              cpu: 2
              memory: 4096Mi
            requests:
              cpu: 100m
              memory: 200Mi
          volumeMounts:  
          - name: localtime
            mountPath: /etc/localtime
            readOnly: true     
      terminationGracePeriodSeconds: 60 
      volumes:    
      - name: localtime
        hostPath: 
          path: /etc/localtime 

---
apiVersion: v1
kind: Service
metadata:
  name: go-gin-rest-api
  namespace: default
  labels:
    name: go-gin-rest-api
spec:
  type: ClusterIP
  selector:
    name: go-gin-rest-api
  ports:
    - name: go-gin-rest-api
      port: 8080  

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: go-gin-rest-api
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx-ingress
  rules:
  - host: "foo.bar.com"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: go-gin-rest-api
            port:
              number: 8080